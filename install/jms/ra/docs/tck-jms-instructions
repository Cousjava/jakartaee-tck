QuickStart Cookbook Instructions for JMS 1.1 / JMS 2.0 TCK Test Suite

======================================================================================================
TCK Instructions to get, configure and run JMS 1.1 / JMS 2.0 TCK Test Suite
======================================================================================================

(1) Grab the JMS 1.1 RI from Java Partner Engineering Website or the current in progress JMS 2.0 RI

    Locate JMS 1.1 RI bundle from Java Partner Engineering Website or the current in progress JMS 2.0 RI

    Example)
    --------
    mkdir /files/jmsri
    cd /files/jmsri
    unzip bundle

    This will install the JMS 1.1 / JMS 2.0 RI under /files/jmsri

(2) Grab the JMS 1.1 / JMS 2.0 TCK Test Suite from Java Partner Engineering Website or the curring in
    progress JMS 2.0 RI

    Locate JMS 1.1 TCK bundle off of Java Partner Engineering Website
    Locate JMS 2.0 TCK bundle here: http://invalid.domain.com/~af70133/jms/jmstck.zip

(3) Create a directory to hold the cts or jms subset bundle

    mkdir /files/jmstck
    cd /files/jmstck
    unzip the bundle into this directory

    This will install the JMS 1.1 / JMS 2.0 TCK Test Suite under /files/jmstck


(4) Edit your ts.jte file under /files/cts/jmstck/bin/ts.jte 

    set jms.home=		# Set to location where JMS 1.1 / JMS 2.0 RI is installed
    set dependency.classes=	# Set to location where JMS 1.1 / JMS 2.0 RI dependency jars/classes exist
    set jms.classes=		# Set to location where JMS 1.1 / JMS 2.0 RI jars/classes exist

    Example settings
    
    jms.home=/home/af70133/jms/jmsri
    dependency.classes=${jms.home}/lib/deps/jdbc20ext.jar${pathsep}${jms.home}/lib/deps/jms.jar${pathsep}${jms.home}/lib/deps/jta.jar${pathsep}${jms.home}/lib/deps/cloudscape/server/cloudscape.jar${pathsep}${jms.home}/lib/deps/cloudscape/server/cloudutil.jar
    jms.classes=${jms.home}/lib/jmsclient.jar${pathsep}${jms.home}/lib/jmsservice.jar${pathsep}${jms.home}/lib/jmsadmin.jar${pathsep}${jms.home}/lib/locale.jar${pathsep}${dependency.classes}

(5) Set the following environment variables and configure your appserver for CTS

    setenv TS_HOME /files/cts/jmstck		# Set to top level unzipped bundle dir

    setenv ANT_HOME $TS_HOME/tools/ant		# Need to point to ant within CTS (uses special ant libs within CTS)
						# Set ANT_OPTS to pickup new endorsed API's and for
						# GlassFish V3 use full absolute path to endorsed dir.

    setenv ANT_OPTS -Djava.endorsed.dirs=/files/jmsri/<rest-of-path-to-jms-ri-jars/classes>

						# ANT_OPTS setting is needed when using ant to
						# build the tests so it picks up the right API's

    set path = ( $TS_HOME/bin $ANT_HOME/bin $path )	# For convenience add TS_HOME/bin and ANT_HOME bin to path)
    cd $TS_HOME/bin				# Change to TS_HOME/bin to configure for CTS

(6) At this point the JMS 1.1 / JMS 2.0 TCK is configured for running. We now need to start the JMS 1.1 / JMS 2.0 RI.

    For starting JMS 1.1 RI these are the steps:

    echo "Starting JNDI service ......"
    $JAVA_HOME/bin/tnameserv -ORBInitialPort 2000 &
    sleep 5
    echo "Starting JMS service ......"
    $JMS_HOME/bin/solaris/jmsadmin -startService &
    sleep 20
    echo "Creating required JMS objects ......"
    $JMS_HOME/bin/solaris/jmsadmin -createQueue MY_QUEUE
    $JMS_HOME/bin/solaris/jmsadmin -createQueue MY_QUEUE2
    $JMS_HOME/bin/solaris/jmsadmin -createQueue testQ0
    $JMS_HOME/bin/solaris/jmsadmin -createQueue testQ1
    $JMS_HOME/bin/solaris/jmsadmin -createQueue testQ2
    $JMS_HOME/bin/solaris/jmsadmin -createQueue testQueue2
    $JMS_HOME/bin/solaris/jmsadmin -createQueue Q2
    $JMS_HOME/bin/solaris/jmsadmin -createTopic MY_TOPIC
    $JMS_HOME/bin/solaris/jmsadmin -createTopic MY_TOPIC1
    $JMS_HOME/bin/solaris/jmsadmin -createConnectionFactory TopicConnectionFactory Topic
    $JMS_HOME/bin/solaris/jmsadmin -createConnectionFactory jms/DURABLE_SUB_CONNECTION_FACTORY Topic -props clientId=cts
    $JMS_HOME/bin/solaris/jmsadmin -createConnectionFactory QueueConnectionFactory Queue

    $JMS_HOME/bin/solaris/jmsadmin -listDestinations	# Make sure everything got created

    You can put these commands in a script to save typing.

    For starting JMS 2.0 RI these steps are in progress and TBD.

    Once the JMS 1.1 / JMS 2.0 RI is up and running we can now run the JMS 1.1 / JMS 2.0 TCK tests.

(7) We can run tests now. Goto a jms test directory and type ant runclient to
    run a test. All the jms tests are under the jms subtree.

    cd $TS_HOME/src/com/sun/ts/tests/jms

    Examples of running jms tests

    Example 1)
    Run a single jms test directory in standalone mode
    --------------------------------------------------
    cd $TS_HOME/src/com/sun/ts/tests/jms/ee/all/bytesMsgQueue
    ant runclient

    Example 2)
    Run a subtree of jms test directories in standalone mode
    ---------------------------------------------------------
    cd $TS_HOME/src/com/sun/ts/tests/jms/ee/all
    ant runclient

    Example 3)
    Run the entire tree of jms tests in standalone mode
    ----------------------------------------------------
    cd $TS_HOME/src/com/sun/ts/tests/jms
    ant runclient

    Example 4)
    Run a single test within a jms test directory in standalone mode
    ----------------------------------------------------------------
    cd $TS_HOME/src/com/sun/ts/tests/jms/ee/all/bytesMsgQueue
    ant -Dtest.client=BytesMsgQueueTests.java -Dtest=bytesMsgNullStreamQTest runclient

    You get the testname by grepping the source file like so:

    grep testName: BytesMsgQueueTests.java

(8) Turn on additional test debugging/tracing option

    The following property is used to control this as specified in TS_HOME/bin/ts.jte:

# @harness.log.traceflag  used to turn on/off verbose debugging output
#                         for the tests.

    Set this to true for any additional verbose test output that the test may print out
    via TestUtil.logTrace calls. The default setting is false.
